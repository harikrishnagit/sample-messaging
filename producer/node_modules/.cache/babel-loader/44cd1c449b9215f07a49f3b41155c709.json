{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2018-2020 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ed25519 = require(\"tweetnacl\");\n\nvar kp_1 = require(\"./kp\");\n\nvar public_1 = require(\"./public\");\n\nvar codec_1 = require(\"./codec\");\n\nexports.VERSION = \"1.0.16\";\n\nfunction createPair(prefix) {\n  var rawSeed = ed25519.randomBytes(32).buffer;\n  var str = codec_1.Codec.encodeSeed(prefix, Buffer.from(rawSeed));\n  return new kp_1.KP(str);\n}\n\nexports.createPair = createPair;\n\nfunction createAccount() {\n  return createPair(Prefix.Account);\n}\n\nexports.createAccount = createAccount;\n\nfunction createUser() {\n  return createPair(Prefix.User);\n}\n\nexports.createUser = createUser;\n\nfunction createOperator() {\n  return createPair(Prefix.Operator);\n}\n\nexports.createOperator = createOperator;\n\nfunction createCluster() {\n  return createPair(Prefix.Cluster);\n}\n\nexports.createCluster = createCluster;\n\nfunction createServer() {\n  return createPair(Prefix.Server);\n}\n\nexports.createServer = createServer;\n\nfunction fromPublic(src) {\n  var raw = codec_1.Codec._decode(src);\n\n  var prefix = Prefixes.parsePrefix(raw.readUInt8(0));\n\n  if (Prefixes.isValidPublicPrefix(prefix)) {\n    return new public_1.PublicKey(src);\n  }\n\n  throw new NKeysError(NKeysErrorCode.InvalidPublicKey);\n}\n\nexports.fromPublic = fromPublic;\n\nfunction fromSeed(src) {\n  codec_1.Codec.decodeSeed(src); // if we are here it decoded\n\n  return new kp_1.KP(src);\n}\n\nexports.fromSeed = fromSeed;\nvar Prefix;\n\n(function (Prefix) {\n  //Seed is the version byte used for encoded NATS Seeds\n  Prefix[Prefix[\"Seed\"] = 144] = \"Seed\"; //PrefixBytePrivate is the version byte used for encoded NATS Private keys\n\n  Prefix[Prefix[\"Private\"] = 120] = \"Private\"; //PrefixByteOperator is the version byte used for encoded NATS Operators\n\n  Prefix[Prefix[\"Operator\"] = 112] = \"Operator\"; //PrefixByteServer is the version byte used for encoded NATS Servers\n\n  Prefix[Prefix[\"Server\"] = 104] = \"Server\"; //PrefixByteCluster is the version byte used for encoded NATS Clusters\n\n  Prefix[Prefix[\"Cluster\"] = 16] = \"Cluster\"; //PrefixByteAccount is the version byte used for encoded NATS Accounts\n\n  Prefix[Prefix[\"Account\"] = 0] = \"Account\"; //PrefixByteUser is the version byte used for encoded NATS Users\n\n  Prefix[Prefix[\"User\"] = 160] = \"User\";\n})(Prefix = exports.Prefix || (exports.Prefix = {}));\n/**\n * Internal utility for testing prefixes\n */\n\n\nvar Prefixes =\n/** @class */\nfunction () {\n  function Prefixes() {}\n\n  Prefixes.isValidPublicPrefix = function (prefix) {\n    return prefix == Prefix.Server || prefix == Prefix.Operator || prefix == Prefix.Cluster || prefix == Prefix.Account || prefix == Prefix.User;\n  };\n\n  Prefixes.startsWithValidPrefix = function (s) {\n    var c = s[0];\n    return c == 'S' || c == 'P' || c == 'O' || c == 'N' || c == 'C' || c == 'A' || c == 'U';\n  };\n\n  Prefixes.isValidPrefix = function (prefix) {\n    var v = this.parsePrefix(prefix);\n    return v != -1;\n  };\n\n  Prefixes.parsePrefix = function (v) {\n    switch (v) {\n      case Prefix.Seed:\n        return Prefix.Seed;\n\n      case Prefix.Private:\n        return Prefix.Private;\n\n      case Prefix.Operator:\n        return Prefix.Operator;\n\n      case Prefix.Server:\n        return Prefix.Server;\n\n      case Prefix.Cluster:\n        return Prefix.Cluster;\n\n      case Prefix.Account:\n        return Prefix.Account;\n\n      case Prefix.User:\n        return Prefix.User;\n\n      default:\n        return -1;\n    }\n  };\n\n  return Prefixes;\n}();\n\nexports.Prefixes = Prefixes;\nvar NKeysErrorCode;\n\n(function (NKeysErrorCode) {\n  NKeysErrorCode[\"InvalidPrefixByte\"] = \"nkeys: invalid prefix byte\";\n  NKeysErrorCode[\"InvalidKey\"] = \"nkeys: invalid key\";\n  NKeysErrorCode[\"InvalidPublicKey\"] = \"nkeys: invalid public key\";\n  NKeysErrorCode[\"InvalidSeedLen\"] = \"nkeys: invalid seed length\";\n  NKeysErrorCode[\"InvalidSeed\"] = \"nkeys: invalid seed\";\n  NKeysErrorCode[\"InvalidEncoding\"] = \"nkeys: invalid encoded key\";\n  NKeysErrorCode[\"InvalidSignature\"] = \"nkeys: signature verification failed\";\n  NKeysErrorCode[\"CannotSign\"] = \"nkeys: can not sign, no private key available\";\n  NKeysErrorCode[\"PublicKeyOnly\"] = \"nkeys: no seed or private key available\";\n  NKeysErrorCode[\"InvalidChecksum\"] = \"nkeys: invalid checksum\";\n  NKeysErrorCode[\"SerializationError\"] = \"nkeys: serialization error\";\n  NKeysErrorCode[\"ApiError\"] = \"nkeys: api error\";\n})(NKeysErrorCode = exports.NKeysErrorCode || (exports.NKeysErrorCode = {}));\n\nvar NKeysError =\n/** @class */\nfunction (_super) {\n  __extends(NKeysError, _super);\n  /**\n   * @param {NKeysErrorCode} code\n   * @param {Error} [chainedError]\n   * @constructor\n   *\n   * @api private\n   */\n\n\n  function NKeysError(code, chainedError) {\n    var _this = _super.call(this, code) || this;\n\n    Error.captureStackTrace(_this, _this.constructor);\n    _this.name = \"NKeysError\";\n    _this.code = code;\n    _this.chainedError = chainedError;\n    return _this;\n  }\n\n  return NKeysError;\n}(Error);\n\nexports.NKeysError = NKeysError;","map":{"version":3,"sources":["../../src/nkeys.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2018-2020 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ed25519 = require(\"tweetnacl\");\nvar kp_1 = require(\"./kp\");\nvar public_1 = require(\"./public\");\nvar codec_1 = require(\"./codec\");\nexports.VERSION = \"1.0.16\";\nfunction createPair(prefix) {\n    var rawSeed = ed25519.randomBytes(32).buffer;\n    var str = codec_1.Codec.encodeSeed(prefix, Buffer.from(rawSeed));\n    return new kp_1.KP(str);\n}\nexports.createPair = createPair;\nfunction createAccount() {\n    return createPair(Prefix.Account);\n}\nexports.createAccount = createAccount;\nfunction createUser() {\n    return createPair(Prefix.User);\n}\nexports.createUser = createUser;\nfunction createOperator() {\n    return createPair(Prefix.Operator);\n}\nexports.createOperator = createOperator;\nfunction createCluster() {\n    return createPair(Prefix.Cluster);\n}\nexports.createCluster = createCluster;\nfunction createServer() {\n    return createPair(Prefix.Server);\n}\nexports.createServer = createServer;\nfunction fromPublic(src) {\n    var raw = codec_1.Codec._decode(src);\n    var prefix = Prefixes.parsePrefix(raw.readUInt8(0));\n    if (Prefixes.isValidPublicPrefix(prefix)) {\n        return new public_1.PublicKey(src);\n    }\n    throw new NKeysError(NKeysErrorCode.InvalidPublicKey);\n}\nexports.fromPublic = fromPublic;\nfunction fromSeed(src) {\n    codec_1.Codec.decodeSeed(src);\n    // if we are here it decoded\n    return new kp_1.KP(src);\n}\nexports.fromSeed = fromSeed;\nvar Prefix;\n(function (Prefix) {\n    //Seed is the version byte used for encoded NATS Seeds\n    Prefix[Prefix[\"Seed\"] = 144] = \"Seed\";\n    //PrefixBytePrivate is the version byte used for encoded NATS Private keys\n    Prefix[Prefix[\"Private\"] = 120] = \"Private\";\n    //PrefixByteOperator is the version byte used for encoded NATS Operators\n    Prefix[Prefix[\"Operator\"] = 112] = \"Operator\";\n    //PrefixByteServer is the version byte used for encoded NATS Servers\n    Prefix[Prefix[\"Server\"] = 104] = \"Server\";\n    //PrefixByteCluster is the version byte used for encoded NATS Clusters\n    Prefix[Prefix[\"Cluster\"] = 16] = \"Cluster\";\n    //PrefixByteAccount is the version byte used for encoded NATS Accounts\n    Prefix[Prefix[\"Account\"] = 0] = \"Account\";\n    //PrefixByteUser is the version byte used for encoded NATS Users\n    Prefix[Prefix[\"User\"] = 160] = \"User\";\n})(Prefix = exports.Prefix || (exports.Prefix = {}));\n/**\n * Internal utility for testing prefixes\n */\nvar Prefixes = /** @class */ (function () {\n    function Prefixes() {\n    }\n    Prefixes.isValidPublicPrefix = function (prefix) {\n        return prefix == Prefix.Server\n            || prefix == Prefix.Operator\n            || prefix == Prefix.Cluster\n            || prefix == Prefix.Account\n            || prefix == Prefix.User;\n    };\n    Prefixes.startsWithValidPrefix = function (s) {\n        var c = s[0];\n        return c == 'S' || c == 'P' || c == 'O' || c == 'N' || c == 'C' || c == 'A' || c == 'U';\n    };\n    Prefixes.isValidPrefix = function (prefix) {\n        var v = this.parsePrefix(prefix);\n        return v != -1;\n    };\n    Prefixes.parsePrefix = function (v) {\n        switch (v) {\n            case Prefix.Seed:\n                return Prefix.Seed;\n            case Prefix.Private:\n                return Prefix.Private;\n            case Prefix.Operator:\n                return Prefix.Operator;\n            case Prefix.Server:\n                return Prefix.Server;\n            case Prefix.Cluster:\n                return Prefix.Cluster;\n            case Prefix.Account:\n                return Prefix.Account;\n            case Prefix.User:\n                return Prefix.User;\n            default:\n                return -1;\n        }\n    };\n    return Prefixes;\n}());\nexports.Prefixes = Prefixes;\nvar NKeysErrorCode;\n(function (NKeysErrorCode) {\n    NKeysErrorCode[\"InvalidPrefixByte\"] = \"nkeys: invalid prefix byte\";\n    NKeysErrorCode[\"InvalidKey\"] = \"nkeys: invalid key\";\n    NKeysErrorCode[\"InvalidPublicKey\"] = \"nkeys: invalid public key\";\n    NKeysErrorCode[\"InvalidSeedLen\"] = \"nkeys: invalid seed length\";\n    NKeysErrorCode[\"InvalidSeed\"] = \"nkeys: invalid seed\";\n    NKeysErrorCode[\"InvalidEncoding\"] = \"nkeys: invalid encoded key\";\n    NKeysErrorCode[\"InvalidSignature\"] = \"nkeys: signature verification failed\";\n    NKeysErrorCode[\"CannotSign\"] = \"nkeys: can not sign, no private key available\";\n    NKeysErrorCode[\"PublicKeyOnly\"] = \"nkeys: no seed or private key available\";\n    NKeysErrorCode[\"InvalidChecksum\"] = \"nkeys: invalid checksum\";\n    NKeysErrorCode[\"SerializationError\"] = \"nkeys: serialization error\";\n    NKeysErrorCode[\"ApiError\"] = \"nkeys: api error\";\n})(NKeysErrorCode = exports.NKeysErrorCode || (exports.NKeysErrorCode = {}));\nvar NKeysError = /** @class */ (function (_super) {\n    __extends(NKeysError, _super);\n    /**\n     * @param {NKeysErrorCode} code\n     * @param {Error} [chainedError]\n     * @constructor\n     *\n     * @api private\n     */\n    function NKeysError(code, chainedError) {\n        var _this = _super.call(this, code) || this;\n        Error.captureStackTrace(_this, _this.constructor);\n        _this.name = \"NKeysError\";\n        _this.code = code;\n        _this.chainedError = chainedError;\n        return _this;\n    }\n    return NKeysError;\n}(Error));\nexports.NKeysError = NKeysError;\n//# sourceMappingURL=nkeys.js.map"]},"metadata":{},"sourceType":"script"}