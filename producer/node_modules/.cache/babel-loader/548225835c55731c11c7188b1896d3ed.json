{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2018 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ed25519 = require(\"tweetnacl\");\n\nvar codec_1 = require(\"./codec\");\n\nvar nkeys_1 = require(\"./nkeys\");\n\nvar KP =\n/** @class */\nfunction () {\n  function KP(seed) {\n    this.seed = seed;\n  }\n\n  KP.prototype.getRawSeed = function () {\n    var sd = codec_1.Codec.decodeSeed(this.seed);\n    return sd.buf;\n  };\n\n  KP.prototype.getSeed = function () {\n    return this.seed;\n  };\n\n  KP.prototype.getPublicKey = function () {\n    var sd = codec_1.Codec.decodeSeed(this.seed);\n    var kp = ed25519.sign.keyPair.fromSeed(this.getRawSeed());\n    return codec_1.Codec.encode(sd.prefix, Buffer.from(kp.publicKey));\n  };\n\n  ;\n\n  KP.prototype.getPrivateKey = function () {\n    var kp = ed25519.sign.keyPair.fromSeed(this.getRawSeed());\n    return codec_1.Codec.encode(nkeys_1.Prefix.Private, Buffer.from(kp.secretKey));\n  };\n\n  KP.prototype.sign = function (input) {\n    var kp = ed25519.sign.keyPair.fromSeed(this.getRawSeed());\n    var a = ed25519.sign.detached(input, kp.secretKey);\n    return Buffer.from(a.buffer);\n  };\n\n  KP.prototype.verify = function (input, sig) {\n    var kp = ed25519.sign.keyPair.fromSeed(this.getRawSeed());\n    return ed25519.sign.detached.verify(input, sig, kp.publicKey);\n  };\n\n  return KP;\n}();\n\nexports.KP = KP;","map":{"version":3,"sources":["../../src/kp.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;AAaG;;;;;;AAEH,IAAA,OAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAA,EAAA;AAAA;AAAA,YAAA;AAEI,WAAA,EAAA,CAAY,IAAZ,EAAwB;AACpB,SAAK,IAAL,GAAY,IAAZ;AACH;;AAED,EAAA,EAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACI,QAAI,EAAE,GAAG,OAAA,CAAA,KAAA,CAAM,UAAN,CAAiB,KAAK,IAAtB,CAAT;AACA,WAAO,EAAE,CAAC,GAAV;AACH,GAHD;;AAKA,EAAA,EAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACI,WAAO,KAAK,IAAZ;AACH,GAFD;;AAIA,EAAA,EAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACI,QAAI,EAAE,GAAG,OAAA,CAAA,KAAA,CAAM,UAAN,CAAiB,KAAK,IAAtB,CAAT;AACA,QAAI,EAAE,GAAG,OAAO,CAAC,IAAR,CAAa,OAAb,CAAqB,QAArB,CAA8B,KAAK,UAAL,EAA9B,CAAT;AACA,WAAO,OAAA,CAAA,KAAA,CAAM,MAAN,CAAa,EAAE,CAAC,MAAhB,EAAwB,MAAM,CAAC,IAAP,CAAY,EAAE,CAAC,SAAf,CAAxB,CAAP;AACH,GAJD;;AAIC;;AAED,EAAA,EAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACI,QAAI,EAAE,GAAG,OAAO,CAAC,IAAR,CAAa,OAAb,CAAqB,QAArB,CAA8B,KAAK,UAAL,EAA9B,CAAT;AACA,WAAO,OAAA,CAAA,KAAA,CAAM,MAAN,CAAa,OAAA,CAAA,MAAA,CAAO,OAApB,EAA6B,MAAM,CAAC,IAAP,CAAY,EAAE,CAAC,SAAf,CAA7B,CAAP;AACH,GAHD;;AAKA,EAAA,EAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,KAAL,EAAkB;AACd,QAAI,EAAE,GAAG,OAAO,CAAC,IAAR,CAAa,OAAb,CAAqB,QAArB,CAA8B,KAAK,UAAL,EAA9B,CAAT;AACA,QAAI,CAAC,GAAG,OAAO,CAAC,IAAR,CAAa,QAAb,CAAsB,KAAtB,EAA6B,EAAE,CAAC,SAAhC,CAAR;AACA,WAAO,MAAM,CAAC,IAAP,CAAY,CAAC,CAAC,MAAd,CAAP;AACH,GAJD;;AAMA,EAAA,EAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,KAAP,EAAsB,GAAtB,EAAiC;AAC7B,QAAI,EAAE,GAAG,OAAO,CAAC,IAAR,CAAa,OAAb,CAAqB,QAArB,CAA8B,KAAK,UAAL,EAA9B,CAAT;AACA,WAAO,OAAO,CAAC,IAAR,CAAa,QAAb,CAAsB,MAAtB,CAA6B,KAA7B,EAAoC,GAApC,EAAyC,EAAE,CAAC,SAA5C,CAAP;AACH,GAHD;;AAIJ,SAAA,EAAA;AAAC,CApCD,EAAA;;AAAa,OAAA,CAAA,EAAA,GAAA,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2018 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ed25519 = require(\"tweetnacl\");\nvar codec_1 = require(\"./codec\");\nvar nkeys_1 = require(\"./nkeys\");\nvar KP = /** @class */ (function () {\n    function KP(seed) {\n        this.seed = seed;\n    }\n    KP.prototype.getRawSeed = function () {\n        var sd = codec_1.Codec.decodeSeed(this.seed);\n        return sd.buf;\n    };\n    KP.prototype.getSeed = function () {\n        return this.seed;\n    };\n    KP.prototype.getPublicKey = function () {\n        var sd = codec_1.Codec.decodeSeed(this.seed);\n        var kp = ed25519.sign.keyPair.fromSeed(this.getRawSeed());\n        return codec_1.Codec.encode(sd.prefix, Buffer.from(kp.publicKey));\n    };\n    ;\n    KP.prototype.getPrivateKey = function () {\n        var kp = ed25519.sign.keyPair.fromSeed(this.getRawSeed());\n        return codec_1.Codec.encode(nkeys_1.Prefix.Private, Buffer.from(kp.secretKey));\n    };\n    KP.prototype.sign = function (input) {\n        var kp = ed25519.sign.keyPair.fromSeed(this.getRawSeed());\n        var a = ed25519.sign.detached(input, kp.secretKey);\n        return Buffer.from(a.buffer);\n    };\n    KP.prototype.verify = function (input, sig) {\n        var kp = ed25519.sign.keyPair.fromSeed(this.getRawSeed());\n        return ed25519.sign.detached.verify(input, sig, kp.publicKey);\n    };\n    return KP;\n}());\nexports.KP = KP;\n//# sourceMappingURL=kp.js.map"]},"metadata":{},"sourceType":"script"}