{"ast":null,"code":"var _jsxFileName = \"/Users/harinarasimhamurthy/workspace/sample-messaging/producer/src/components/common/tables/cellTypes/CheckboxCell.js\";\nimport React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport { Checkbox } from '../../formControls';\nimport PropTypes from 'prop-types';\n\nclass CheckboxCell extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleCheckbox = () => {\n      const {\n        handleChange,\n        label\n      } = this.props;\n      this.setState(({\n        checked\n      }) => ({\n        checked: !checked\n      }), () => handleChange(label, this.state.checked));\n    };\n\n    this.state = {\n      checked: this.props.checked ? this.props.checked : false\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.checked !== this.state.checked) {\n      this.setState({\n        checked: this.props.checked\n      });\n    }\n  }\n\n  render() {\n    const {\n      label,\n      disabled,\n      myRef,\n      width,\n      isHeader,\n      className,\n      hideLabel,\n      collapsing\n    } = this.props;\n    const {\n      checked\n    } = this.state;\n    let field = /*#__PURE__*/React.createElement(Checkbox, {\n      ref: myRef,\n      title: label,\n      name: label,\n      className: className,\n      label: label,\n      hidelabel: hideLabel,\n      handleChange: this.toggleCheckbox,\n      disabled: disabled ? true : false,\n      value: label,\n      checked: checked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    });\n\n    if (isHeader) {\n      return /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        className: \"OIPTableCheckboxCell\",\n        width: width,\n        collapsing: collapsing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, field);\n    } else {\n      return /*#__PURE__*/React.createElement(Table.Cell, {\n        className: \"OIPTableCheckboxCell\",\n        width: width,\n        collapsing: collapsing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, field);\n    }\n  }\n\n}\n\nCheckboxCell.propTypes = {\n  label: PropTypes.any.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\nexport default CheckboxCell;","map":{"version":3,"sources":["/Users/harinarasimhamurthy/workspace/sample-messaging/producer/src/components/common/tables/cellTypes/CheckboxCell.js"],"names":["React","Table","Checkbox","PropTypes","CheckboxCell","Component","constructor","props","toggleCheckbox","handleChange","label","setState","checked","state","componentDidUpdate","render","disabled","myRef","width","isHeader","className","hideLabel","collapsing","field","propTypes","any","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMlBC,cANkB,GAMD,MAAK;AAClB,YAAM;AAACC,QAAAA,YAAD;AAAeC,QAAAA;AAAf,UAAwB,KAAKH,KAAnC;AACA,WAAKI,QAAL,CACI,CAAC;AAACC,QAAAA;AAAD,OAAD,MAAc;AACVA,QAAAA,OAAO,EAAC,CAACA;AADC,OAAd,CADJ,EAII,MAAIH,YAAY,CAACC,KAAD,EAAQ,KAAKG,KAAL,CAAWD,OAAnB,CAJpB;AAMH,KAdiB;;AAEd,SAAKC,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK,OAAX,GAAmB,KAAKL,KAAL,CAAWK,OAA9B,GAAsC;AADtC,KAAb;AAGH;;AAUDE,EAAAA,kBAAkB,GAAE;AAChB,QAAI,KAAKP,KAAL,CAAWK,OAAX,KAAqB,KAAKC,KAAL,CAAWD,OAApC,EAA4C;AACxC,WAAKD,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC,KAAKL,KAAL,CAAWK;AAApB,OAAd;AACH;AACJ;;AACDG,EAAAA,MAAM,GAAE;AACJ,UAAK;AACDL,MAAAA,KADC;AAEDM,MAAAA,QAFC;AAGDC,MAAAA,KAHC;AAIDC,MAAAA,KAJC;AAKDC,MAAAA,QALC;AAMDC,MAAAA,SANC;AAODC,MAAAA,SAPC;AAQDC,MAAAA;AARC,QASD,KAAKf,KATT;AAUA,UAAM;AAACK,MAAAA;AAAD,QAAY,KAAKC,KAAvB;AACA,QAAIU,KAAK,gBACL,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEN,KADT;AAEI,MAAA,KAAK,EAAEP,KAFX;AAGI,MAAA,IAAI,EAAEA,KAHV;AAII,MAAA,SAAS,EAAEU,SAJf;AAKI,MAAA,KAAK,EAAEV,KALX;AAMI,MAAA,SAAS,EAAEW,SANf;AAOI,MAAA,YAAY,EAAE,KAAKb,cAPvB;AAQI,MAAA,QAAQ,EAAEQ,QAAQ,GAAC,IAAD,GAAM,KAR5B;AASI,MAAA,KAAK,EAAEN,KATX;AAUI,MAAA,OAAO,EAAEE,OAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;;AAcA,QAAGO,QAAH,EAAY;AACR,0BACI,oBAAC,KAAD,CAAO,UAAP;AAAkB,QAAA,SAAS,EAAC,sBAA5B;AAAmD,QAAA,KAAK,EAAED,KAA1D;AAAiE,QAAA,UAAU,EAAEI,UAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,KADL,CADJ;AAKH,KAND,MAOI;AACA,0BACI,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAC,sBAAtB;AAA6C,QAAA,KAAK,EAAEL,KAApD;AAA2D,QAAA,UAAU,EAAEI,UAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,KADL,CADJ;AAKH;AACJ;;AA7DqC;;AAgE1CnB,YAAY,CAACoB,SAAb,GAAuB;AACnBd,EAAAA,KAAK,EAAEP,SAAS,CAACsB,GAAV,CAAcC,UADF;AAEnBjB,EAAAA,YAAY,EAAEN,SAAS,CAACwB,IAAV,CAAeD;AAFV,CAAvB;AAKA,eAAetB,YAAf","sourcesContent":["import React from 'react';\nimport {Table} from 'semantic-ui-react';\nimport {Checkbox} from '../../formControls';\nimport PropTypes from 'prop-types';\n\nclass CheckboxCell extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            checked: this.props.checked?this.props.checked:false\n        }\n    }\n    toggleCheckbox = () =>{\n        const {handleChange, label} = this.props;\n        this.setState(\n            ({checked})=>({\n                checked:!checked\n            }),\n            ()=>handleChange(label, this.state.checked)\n        )\n    }\n    componentDidUpdate(){\n        if( this.props.checked!==this.state.checked){\n            this.setState({checked:this.props.checked});\n        }\n    }\n    render(){\n        const{\n            label,\n            disabled,\n            myRef,\n            width,\n            isHeader,\n            className,\n            hideLabel,\n            collapsing\n        } = this.props;\n        const {checked} = this.state;\n        let field =(\n            <Checkbox\n                ref={myRef}\n                title={label}\n                name={label}\n                className={className}\n                label={label}\n                hidelabel={hideLabel}\n                handleChange={this.toggleCheckbox}\n                disabled={disabled?true:false}\n                value={label}\n                checked={checked}\n            />\n        )\n        if(isHeader){\n            return(\n                <Table.HeaderCell className='OIPTableCheckboxCell' width={width} collapsing={collapsing}>\n                    {field}\n                </Table.HeaderCell>\n            )\n        }\n        else{\n            return(\n                <Table.Cell className='OIPTableCheckboxCell' width={width} collapsing={collapsing}>\n                    {field}\n                </Table.Cell>\n            )\n        }\n    }\n}\n\nCheckboxCell.propTypes={\n    label: PropTypes.any.isRequired,\n    handleChange: PropTypes.func.isRequired\n}\n\nexport default CheckboxCell;"]},"metadata":{},"sourceType":"module"}