{"ast":null,"code":"var _jsxFileName = \"/Users/harinarasimhamurthy/workspace/sample-messaging/producer/src/components/common/formControls/Checkbox/Checkbox.js\";\nimport React from 'react';\nimport { Form, Checkbox as SCheckbox } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nexport class _Checkbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentWillMount = () => {\n      this.id = 'checkBox' + _.uniqueId();\n    };\n\n    this.toggleCheckbox = () => {\n      const {\n        handleChange,\n        label,\n        name\n      } = this.props;\n      handleChange(name !== undefined && name !== '' && name !== null ? name : label, !this.props.checked);\n    };\n  }\n\n  render() {\n    const {\n      label,\n      disabled,\n      myRef,\n      checked,\n      className,\n      hideLabel\n    } = this.props;\n    const id = this.id;\n    return /*#__PURE__*/React.createElement(Form.Field, {\n      ref: myRef,\n      key: id,\n      id: id,\n      value: label,\n      control: SCheckbox,\n      title: label,\n      label: hideLabel ? '' : label,\n      \"aria-label\": label,\n      onChange: this.toggleCheckbox,\n      onBlur: this.props.handleBlur,\n      checked: checked,\n      disabled: disabled ? true : false,\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n_Checkbox.propTypes = {\n  disabled: PropTypes.bool,\n  handleChange: PropTypes.func.isRequired\n};\nexport const Checkbox = _Checkbox;","map":{"version":3,"sources":["/Users/harinarasimhamurthy/workspace/sample-messaging/producer/src/components/common/formControls/Checkbox/Checkbox.js"],"names":["React","Form","Checkbox","SCheckbox","PropTypes","_","_Checkbox","Component","componentWillMount","id","uniqueId","toggleCheckbox","handleChange","label","name","props","undefined","checked","render","disabled","myRef","className","hideLabel","handleBlur","propTypes","bool","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,QAAQ,IAAIC,SAA1B,QAA0C,mBAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAuC;AAAA;AAAA;;AAAA,SAC1CC,kBAD0C,GACrB,MAAK;AACtB,WAAKC,EAAL,GAAU,aAAaJ,CAAC,CAACK,QAAF,EAAvB;AACH,KAHyC;;AAAA,SAI1CC,cAJ0C,GAI1B,MAAI;AAChB,YAAM;AAACC,QAAAA,YAAD;AAAeC,QAAAA,KAAf;AAAqBC,QAAAA;AAArB,UAA6B,KAAKC,KAAxC;AACAH,MAAAA,YAAY,CACRE,IAAI,KAAGE,SAAP,IAAkBF,IAAI,KAAG,EAAzB,IAA6BA,IAAI,KAAG,IAApC,GAAyCA,IAAzC,GAA8CD,KADtC,EAER,CAAC,KAAKE,KAAL,CAAWE,OAFJ,CAAZ;AAIH,KAVyC;AAAA;;AAW1CC,EAAAA,MAAM,GAAE;AACJ,UAAK;AACDL,MAAAA,KADC;AAEDM,MAAAA,QAFC;AAGDC,MAAAA,KAHC;AAIDH,MAAAA,OAJC;AAKDI,MAAAA,SALC;AAMDC,MAAAA;AANC,QAOD,KAAKP,KAPT;AAQA,UAAMN,EAAE,GAAG,KAAKA,EAAhB;AACA,wBACI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,GAAG,EAAEW,KADT;AAEI,MAAA,GAAG,EAAEX,EAFT;AAGI,MAAA,EAAE,EAAEA,EAHR;AAII,MAAA,KAAK,EAAEI,KAJX;AAKI,MAAA,OAAO,EAAEV,SALb;AAMI,MAAA,KAAK,EAAEU,KANX;AAOI,MAAA,KAAK,EAAES,SAAS,GAAC,EAAD,GAAIT,KAPxB;AAQI,oBAAYA,KARhB;AASI,MAAA,QAAQ,EAAE,KAAKF,cATnB;AAUI,MAAA,MAAM,EAAE,KAAKI,KAAL,CAAWQ,UAVvB;AAWI,MAAA,OAAO,EAAEN,OAXb;AAYI,MAAA,QAAQ,EAAEE,QAAQ,GAAC,IAAD,GAAM,KAZ5B;AAaI,MAAA,SAAS,EAAEE,SAbf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAiBH;;AAtCyC;AA2C9Cf,SAAS,CAACkB,SAAV,GAAsB;AAClBL,EAAAA,QAAQ,EAAEf,SAAS,CAACqB,IADF;AAElBb,EAAAA,YAAY,EAAER,SAAS,CAACsB,IAAV,CAAeC;AAFX,CAAtB;AAKA,OAAO,MAAMzB,QAAQ,GAAGI,SAAjB","sourcesContent":["import React from 'react';\nimport {Form, Checkbox as SCheckbox} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nexport class _Checkbox extends React.Component{\n    componentWillMount = () =>{\n        this.id = 'checkBox' + _.uniqueId();\n    };\n    toggleCheckbox =()=>{\n        const {handleChange, label,name} = this.props;\n        handleChange(\n            name!==undefined&&name!==''&&name!==null?name:label,\n            !this.props.checked\n        );\n    }\n    render(){\n        const{\n            label,\n            disabled,\n            myRef,\n            checked,\n            className,\n            hideLabel\n        } = this.props;\n        const id = this.id;\n        return(\n            <Form.Field\n                ref={myRef}\n                key={id}\n                id={id}\n                value={label}\n                control={SCheckbox}\n                title={label}\n                label={hideLabel?'':label}\n                aria-label={label}\n                onChange={this.toggleCheckbox}\n                onBlur={this.props.handleBlur}\n                checked={checked}\n                disabled={disabled?true:false}\n                className={className}\n            />\n        )\n    }\n\n    \n}\n\n_Checkbox.propTypes = {\n    disabled: PropTypes.bool,\n    handleChange: PropTypes.func.isRequired  \n}\n\nexport const Checkbox = _Checkbox;"]},"metadata":{},"sourceType":"module"}