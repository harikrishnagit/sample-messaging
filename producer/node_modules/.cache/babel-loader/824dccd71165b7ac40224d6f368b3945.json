{"ast":null,"code":"var _jsxFileName = \"/Users/harinarasimhamurthy/workspace/sample-messaging/producer/src/components/MessageManagement/MessageManagementContainer.js\";\nimport React from 'react';\nimport CommonModal from '../common/modal/CommonModal';\nimport OIPTable from '../common/tables/OIPTable';\nimport OIPCard from '../common/cards/OIPCard';\nimport { Button, Form, TextArea, Input, Icon, Radio, Header, Container, Message } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { any } from 'prop-types';\nimport { NATS } from 'nats';\nexport class MessageManagementContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSort = clickedColumn => () => {\n      const {\n        column,\n        data,\n        direction\n      } = this.state;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n\n    this.handleChange = (path, value) => {\n      // var clonedState = { ...this.state };\n      // _.set(clonedState, path, value);\n      // this.setState({ ...clonedState });\n      _.set(this.state, path, value);\n\n      console.log(JSON.stringify(this.state.path));\n    };\n\n    this.toggleModal = openModal => {\n      let currentState = this.state[openModal];\n      console.log(JSON.stringify(openModal));\n      this.setState({\n        [openModal]: !currentState\n      });\n    };\n\n    this.toggleUpdateModal = index => {\n      this.setState({\n        chosenCardIndex: index,\n        openUpdateModal: !this.state.openUpdateModal\n      });\n    };\n\n    this.hideTextBox = () => {\n      this.setState({\n        showTextBox: false\n      });\n    };\n\n    this.showTextBox = () => {\n      this.setState({\n        showTextBox: true\n      });\n    };\n\n    this.handleSubmit = () => {\n      console.log(JSON.stringify(this.state));\n    };\n\n    this.onSendMessage = userData => {\n      let currErrors = [];\n      console.log(userData);\n      this.setState({\n        loading: true\n      });\n\n      const NATS = require('nats');\n\n      const nc = NATS.connect({\n        url: \"nats://localhost:4222\"\n      }); // Simple Publisher\n\n      nc.publish('foo', userData); // Close connection\n\n      nc.close(); // location: 'http://localhost:10005/PostMessageQueue'\n      // axios({\n      //     url: location,\n      //     method: \"POST\",\n      //     data: userData,\n      // }).then(response => {\n      //     console.log(JSON.stringify(response.data));\n      // }).catch(err => {\n      //     console.log(JSON.stringify(err));\n      // });\n    };\n\n    this.state = {\n      openSearchModal: false,\n      openUpdateModal: false,\n      showTextBox: false,\n      successToastVisible: false,\n      chosenCardIndex: 0,\n      userData: any,\n      username: '',\n      firstname: \"\",\n      lastname: \"\",\n      middlename: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      data: [{\n        user: \"Kennedy, John (jsmith)\",\n        fullname: {\n          firstname: \"John\",\n          middlename: \"F\",\n          lastname: \"Kennedy\"\n        },\n        email: \"jfk@gmail.com\",\n        phoneNumber: \"(111)-222-3333#1235\"\n      }, {\n        user: \"Wilson, Woody\",\n        fullname: {\n          firstname: \"Woodrow\",\n          lastname: \"Willson\"\n        },\n        email: \"woody@gmail.com\",\n        phoneNumber: \"(222)-555-3333\"\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, this.state.successToastVisible ? /*#__PURE__*/React.createElement(Message, {\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"check circle outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }), \"'User Successfully Updated'\", /*#__PURE__*/React.createElement(Icon, {\n      className: \"cancel\",\n      style: {\n        float: 'right'\n      },\n      onClick: () => {\n        this.setState({\n          successToastVisible: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    })) : false, /*#__PURE__*/React.createElement(Container, {\n      style: {\n        padding: '24px',\n        border: '2px',\n        borderRadius: '5px',\n        backgroundColor: '#f8f9fa'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h1\",\n      style: {\n        padding: '0.5em 0em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Send/Update user Information\", /*#__PURE__*/React.createElement(Header.Subheader, {\n      style: {\n        paddingTop: '0.25em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, \"Use the Send button to Send your information. At least one field must be filled to complete this action.\"))), /*#__PURE__*/React.createElement(Form, {\n      style: {\n        padding: '24px',\n        border: '2px solid #6c757d',\n        borderRadius: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"User Name\",\n      placeholder: \"User Name\",\n      onChange: e => this.handleChange(\"this.state.userData.username\", e.target.value),\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"First Name\",\n      placeholder: \"First Name\",\n      onChange: e => this.handleChange(\"this.state.userData.firstname\", e.target.value),\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      name: \"middlename\",\n      label: \"Middle Name\",\n      placeholder: \"Middle Name\",\n      width: 4,\n      onChange: e => this.handleChange(\"this.state.userData.middlename\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      name: \"lastname\",\n      label: \"Last Name\",\n      onChange: e => this.handleChange(\"this.state.userData.lastname\", e.target.value),\n      placeholder: \"Last Name\",\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      name: \"email\",\n      label: \"Email\",\n      placeholder: \"example@email.com\",\n      width: 6,\n      onChange: e => this.handleChange(\"this.state.userData.email\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      onChange: e => this.handleChange(\"this.state.userData.phonenumber\", e.target.value),\n      label: \"Phone Number\",\n      placeholder: \"+X(XXX)-XXX-XXXX\",\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      title: 'Send Message',\n      onClick: () => {\n        console.log(\"Hari\");\n        this.onSendMessage(this.state.userData);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }), 'Send')), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }), this.state.data ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(OIPTable, {\n      scrollable: 100,\n      celled: false,\n      basic: false,\n      columns: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(OIPTable.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(OIPTable.HeaderCell, {\n      width: \"20%\",\n      sorted: this.state.column === \"user\" ? this.state.direction : null,\n      onClick: this.handleSort(\"user\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, \"UserName\"), /*#__PURE__*/React.createElement(OIPTable.HeaderCell, {\n      width: \"20%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 37\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(OIPTable.HeaderCell, {\n      width: \"20%\",\n      sorted: this.state.column === \"active\" ? this.state.direction : null,\n      onClick: this.handleSort(\"active\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(OIPTable.HeaderCell, {\n      width: \"20%\",\n      sorted: this.state.column === \"active\" ? this.state.direction : null,\n      onClick: this.handleSort(\"active\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, \"Phone\"))), _.map(this.state.data, (userData, index) => {\n      let cardData = (({\n        user,\n        fullname,\n        email,\n        phoneNumber\n      }) => ({\n        user,\n        fullname,\n        email,\n        phoneNumber\n      }))(userData);\n\n      return /*#__PURE__*/React.createElement(OIPCard, {\n        data: cardData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 41\n        }\n      });\n    })) : ''));\n  }\n\n}\nexport default MessageManagementContainer;","map":{"version":3,"sources":["/Users/harinarasimhamurthy/workspace/sample-messaging/producer/src/components/MessageManagement/MessageManagementContainer.js"],"names":["React","CommonModal","OIPTable","OIPCard","Button","Form","TextArea","Input","Icon","Radio","Header","Container","Message","_","axios","any","NATS","MessageManagementContainer","Component","constructor","props","handleSort","clickedColumn","column","data","direction","state","setState","sortBy","reverse","handleChange","path","value","set","console","log","JSON","stringify","toggleModal","openModal","currentState","toggleUpdateModal","index","chosenCardIndex","openUpdateModal","hideTextBox","showTextBox","handleSubmit","onSendMessage","userData","currErrors","loading","require","nc","connect","url","publish","close","openSearchModal","successToastVisible","username","firstname","lastname","middlename","email","phoneNumber","user","fullname","render","float","padding","border","borderRadius","backgroundColor","paddingTop","e","target","map","cardData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CommonModal from '../common/modal/CommonModal'\nimport OIPTable from '../common/tables/OIPTable'\nimport OIPCard from '../common/cards/OIPCard'\nimport { Button, Form, TextArea, Input, Icon, Radio, Header, Container, Message } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { any } from 'prop-types';\nimport { NATS } from 'nats';\n\nexport class MessageManagementContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openSearchModal: false,\n            openUpdateModal: false,\n            showTextBox: false,\n            successToastVisible: false,\n            chosenCardIndex: 0,\n            userData: any,\n            username: '',\n            firstname: \"\",\n            lastname: \"\",\n            middlename: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            data: [\n                {\n                    user: \"Kennedy, John (jsmith)\",\n                    fullname: {\n                        firstname: \"John\",\n                        middlename: \"F\",\n                        lastname: \"Kennedy\"\n                    },\n                    email: \"jfk@gmail.com\",\n                    phoneNumber: \"(111)-222-3333#1235\"\n                },\n                {\n                    user: \"Wilson, Woody\",\n                    fullname: {\n                        firstname: \"Woodrow\",\n                        lastname: \"Willson\"\n                    },\n                    email: \"woody@gmail.com\",\n                    phoneNumber: \"(222)-555-3333\"\n                }\n            ]\n        }\n    }\n    handleSort = clickedColumn => () => {\n        const { column, data, direction } = this.state;\n\n        if (column !== clickedColumn) {\n            this.setState({\n                column: clickedColumn,\n                data: _.sortBy(data, [clickedColumn]),\n                direction: \"ascending\"\n            });\n\n            return;\n        }\n\n        this.setState({\n            data: data.reverse(),\n            direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n        });\n    };\n    handleChange = (path, value) => {\n        // var clonedState = { ...this.state };\n        // _.set(clonedState, path, value);\n        // this.setState({ ...clonedState });\n        _.set(this.state, path, value);\n        console.log(JSON.stringify(this.state.path));\n    };\n\n    toggleModal = (openModal) => {\n        let currentState = this.state[openModal];\n        console.log(JSON.stringify(openModal));\n        this.setState({ [openModal]: !currentState });\n    }\n    toggleUpdateModal = (index) => {\n        this.setState({\n            chosenCardIndex: index,\n            openUpdateModal: !this.state.openUpdateModal\n        });\n    }\n    hideTextBox = () => {\n        this.setState({ showTextBox: false })\n    }\n    showTextBox = () => {\n        this.setState({ showTextBox: true })\n    }\n    handleSubmit = () => {\n        console.log(JSON.stringify(this.state));\n\n    }\n    onSendMessage = (userData) => {\n        let currErrors = [];\n        console.log(userData);\n        this.setState({ loading: true });\n        const NATS = require('nats')\n        const nc = NATS.connect({\n            url: \"nats://localhost:4222\"\n        })\n        // Simple Publisher\n        nc.publish('foo', userData)\n        // Close connection\n        nc.close()\n\n        // location: 'http://localhost:10005/PostMessageQueue'\n        // axios({\n        //     url: location,\n        //     method: \"POST\",\n        //     data: userData,\n        // }).then(response => {\n        //     console.log(JSON.stringify(response.data));\n        // }).catch(err => {\n        //     console.log(JSON.stringify(err));\n        // });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.successToastVisible ?\n                    <Message color='green'>\n                        <Icon className='check circle outline' />\n                'User Successfully Updated'\n                <Icon\n                            className=\"cancel\"\n                            style={{ float: 'right' }}\n                            onClick={() => { this.setState({ successToastVisible: false }) }}\n                        />\n                    </Message> : false}\n                <Container style={{ padding: '24px', border: '2px', borderRadius: '5px', backgroundColor: '#f8f9fa' }}>\n                    <Header as='h1' style={{ padding: '0.5em 0em' }}>Send/Update user Information\n                    <Header.Subheader style={{ paddingTop: '0.25em' }}>\n                            <i>Use the Send button to Send your information. At least one field must be filled to complete this action.</i>\n                        </Header.Subheader>\n                    </Header>\n                    <Form\n                        style={{ padding: '24px', border: '2px solid #6c757d', borderRadius: '5px' }}>\n                        <Form.Input label='User Name' placeholder='User Name' onChange={e => this.handleChange(\"this.state.userData.username\", e.target.value)}\n                            width={4} />\n                        <Form.Group>\n                            <Form.Input label='First Name' placeholder='First Name' onChange={e => this.handleChange(\"this.state.userData.firstname\", e.target.value)} width={6} />\n                            <Form.Input name='middlename' label='Middle Name' placeholder='Middle Name' width={4} onChange={e => this.handleChange(\"this.state.userData.middlename\", e.target.value)} />\n                            <Form.Input name='lastname' label='Last Name' onChange={e => this.handleChange(\"this.state.userData.lastname\", e.target.value)} placeholder='Last Name' width={6} />\n                        </Form.Group>\n                        <Form.Input name='email' label='Email' placeholder='example@email.com' width={6} onChange={e => this.handleChange(\"this.state.userData.email\", e.target.value)} />\n                        <Form.Input onChange={e => this.handleChange(\"this.state.userData.phonenumber\", e.target.value)} label='Phone Number' placeholder='+X(XXX)-XXX-XXXX' width={6} />\n                        <Button\n                            color=\"blue\"\n                            title={'Send Message'}\n                            onClick={() => { console.log(\"Hari\"); this.onSendMessage(this.state.userData) }}>\n                            <Icon name='upload' />{'Send'}\n                        </Button>\n                    </Form>\n                    <br />\n                    {this.state.data ? (\n                        <div>\n                            <OIPTable\n                                scrollable={100}\n                                celled={false}\n                                basic={false}\n                                columns={5}\n                            >\n                                <OIPTable.Header>\n                                    <OIPTable.HeaderCell\n                                        width='20%'\n                                        sorted={this.state.column === \"user\" ? this.state.direction : null}\n                                        onClick={this.handleSort(\"user\")}\n                                    >UserName</OIPTable.HeaderCell>\n                                    <OIPTable.HeaderCell width='20%'>Full Name</OIPTable.HeaderCell>\n                                    <OIPTable.HeaderCell\n                                        width='20%'\n                                        sorted={this.state.column === \"active\" ? this.state.direction : null}\n                                        onClick={this.handleSort(\"active\")}\n                                    >Email</OIPTable.HeaderCell>\n                                    <OIPTable.HeaderCell\n                                        width='20%'\n                                        sorted={this.state.column === \"active\" ? this.state.direction : null}\n                                        onClick={this.handleSort(\"active\")}\n                                    >Phone</OIPTable.HeaderCell>\n                                </OIPTable.Header>\n                            </OIPTable>\n                            {_.map(this.state.data, (userData, index) => {\n                                let cardData = (({ user, fullname, email, phoneNumber }) =>\n                                ({\n                                    user, fullname, email, phoneNumber,\n                                }))(userData);\n                                return (<OIPCard data={cardData}>\n                                    {/* <Button icon=\"ellipsis horizontal\" onClick={()=>{this.toggleUpdateModal(index)}}></Button> */}\n                                </OIPCard>)\n                            })}\n\n                        </div>\n                    ) : ''}\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default MessageManagementContainer;"]},"metadata":{},"sourceType":"module"}