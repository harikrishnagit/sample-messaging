{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2018 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction dump(buf, msg) {\n  if (msg) {\n    console.log(msg);\n  }\n\n  var a = [];\n\n  for (var i = 0; i < buf.byteLength; i++) {\n    if (i % 8 === 0) {\n      a.push('\\n');\n    }\n\n    var v = buf[i].toString(16);\n\n    if (v.length === 1) {\n      v = '0' + v;\n    }\n\n    a.push(v);\n  }\n\n  console.log(a.join('  '));\n}\n\nexports.dump = dump;\n\nfunction node6(buf) {\n  // @ts-ignore\n  return buf;\n}\n\nfunction node8(buf) {\n  return buf.buffer;\n}\n\nfunction parseNodeVersion() {\n  var ma = process.version.match(/^v(\\d+).+/i);\n\n  if (ma && ma.length > 1) {\n    return parseInt(ma[1], 10);\n  }\n\n  return 0;\n} // Node < 8 needs different handling on how a Buffer\n// is converted to ArrayBuffer. These older nodes\n// don't have the '.buffer' property.\n\n\nfunction toArrayBuffer() {\n  if (parseNodeVersion() < 8) {\n    return node6;\n  } else {\n    return node8;\n  }\n}\n\nexports.toArrayBuffer = toArrayBuffer;","map":{"version":3,"sources":["../../src/util.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;AAaG;;;;;;AAEH,SAAgB,IAAhB,CAAqB,GAArB,EAAkC,GAAlC,EAA8C;AAC1C,MAAI,GAAJ,EAAS;AACL,IAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACH;;AACD,MAAI,CAAC,GAAa,EAAlB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,UAAxB,EAAoC,CAAC,EAArC,EAAyC;AACrC,QAAI,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACb,MAAA,CAAC,CAAC,IAAF,CAAO,IAAP;AACH;;AACD,QAAI,CAAC,GAAG,GAAG,CAAC,CAAD,CAAH,CAAO,QAAP,CAAgB,EAAhB,CAAR;;AACA,QAAI,CAAC,CAAC,MAAF,KAAa,CAAjB,EAAoB;AAChB,MAAA,CAAC,GAAG,MAAM,CAAV;AACH;;AACD,IAAA,CAAC,CAAC,IAAF,CAAO,CAAP;AACH;;AACD,EAAA,OAAO,CAAC,GAAR,CAAY,CAAC,CAAC,IAAF,CAAO,IAAP,CAAZ;AACH;;AAhBD,OAAA,CAAA,IAAA,GAAA,IAAA;;AAsBA,SAAS,KAAT,CAAe,GAAf,EAA0B;AACtB;AACA,SAAO,GAAP;AACH;;AAED,SAAS,KAAT,CAAe,GAAf,EAA0B;AACtB,SAAO,GAAG,CAAC,MAAX;AACH;;AAED,SAAS,gBAAT,GAAyB;AACrB,MAAI,EAAE,GAAG,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAsB,YAAtB,CAAT;;AACA,MAAG,EAAE,IAAI,EAAE,CAAC,MAAH,GAAY,CAArB,EAAwB;AACpB,WAAO,QAAQ,CAAC,EAAE,CAAC,CAAD,CAAH,EAAQ,EAAR,CAAf;AACH;;AACD,SAAO,CAAP;AACH,C,CAED;AACA;AACA;;;AACA,SAAgB,aAAhB,GAA6B;AACzB,MAAG,gBAAgB,KAAK,CAAxB,EAA2B;AACvB,WAAO,KAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ;;AAND,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2018 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction dump(buf, msg) {\n    if (msg) {\n        console.log(msg);\n    }\n    var a = [];\n    for (var i = 0; i < buf.byteLength; i++) {\n        if (i % 8 === 0) {\n            a.push('\\n');\n        }\n        var v = buf[i].toString(16);\n        if (v.length === 1) {\n            v = '0' + v;\n        }\n        a.push(v);\n    }\n    console.log(a.join('  '));\n}\nexports.dump = dump;\nfunction node6(buf) {\n    // @ts-ignore\n    return buf;\n}\nfunction node8(buf) {\n    return buf.buffer;\n}\nfunction parseNodeVersion() {\n    var ma = process.version.match(/^v(\\d+).+/i);\n    if (ma && ma.length > 1) {\n        return parseInt(ma[1], 10);\n    }\n    return 0;\n}\n// Node < 8 needs different handling on how a Buffer\n// is converted to ArrayBuffer. These older nodes\n// don't have the '.buffer' property.\nfunction toArrayBuffer() {\n    if (parseNodeVersion() < 8) {\n        return node6;\n    }\n    else {\n        return node8;\n    }\n}\nexports.toArrayBuffer = toArrayBuffer;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}