{"ast":null,"code":"var _jsxFileName = \"/Users/harinarasimhamurthy/workspace/sample-messaging/producer/src/components/common/modal/CommonModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FocusTrap from 'focus-trap-react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Modal, Form, Icon, Header, Button, Table, Segment } from 'semantic-ui-react';\n\nconst CommonModal = props => {\n  const {\n    htmlContent\n  } = props;\n\n  const ignoreDefaultCancel = e => {\n    e.preventDefault();\n    props.cancelAction();\n  };\n\n  const ignoreDefaultConfirm = e => {\n    e.preventDefault();\n    props.confirmAction();\n  };\n\n  return !!props.open &&\n  /*#__PURE__*/\n  // <FocusTrap>\n  React.createElement(Modal, {\n    open: props.open,\n    closeOnDimmerClick: props.closeOnDimmerClick === 'no' ? false : true,\n    size: props.size ? props.size : 'tiny',\n    onClose: props.cancelAction || props.onClose,\n    style: {\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    attached: \"top\",\n    style: {\n      color: 'white',\n      backgroundColor: '#0E6EB8',\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, props.title, /*#__PURE__*/React.createElement(Icon, {\n    name: \"cancel\",\n    onClick: ignoreDefaultCancel,\n    title: props.cancelButtonText || 'Cancel',\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Content, {\n    style: {\n      padding: \"0px 10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, htmlContent && ReactHtmlParser(props.htmlContent), props.displayHtml ? ReactHtmlParser(props.children) : props.children, /*#__PURE__*/React.createElement(Form, {\n    style: {\n      padding: '24px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    style: {\n      borderCollapse: 'collapse',\n      visibility: props.confirmButton ? props.confirmButton : 'visible'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    title: props.clearButtonText ? props.clearButtonText : 'Clear Changes',\n    onClick: ignoreDefaultConfirm,\n    disabled: props.disabled,\n    color: 'red',\n    floated: \"right\",\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, props.clearButtonText ? props.clearButtonText : 'Confirm'), /*#__PURE__*/React.createElement(Button, {\n    title: props.confirmButtonText ? props.confirmButtonText : 'Confirm',\n    onClick: ignoreDefaultConfirm,\n    disabled: props.disabled,\n    color: 'blue',\n    floated: \"right\",\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, props.confirmButtonText ? props.confirmButtonText : 'Confirm'))))) // </FocusTrap> \n  ;\n};\n\nCommonModal.propTypes = {\n  buttonText: PropTypes.string,\n  size: PropTypes.string,\n  type: PropTypes.string,\n  closeOnDimmerClick: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  open: PropTypes.any.isRequired,\n  cancelAction: PropTypes.func.isRequired,\n  confirmAction: PropTypes.func.isRequired,\n  scrolling: PropTypes.bool\n};\nexport default CommonModal;","map":{"version":3,"sources":["/Users/harinarasimhamurthy/workspace/sample-messaging/producer/src/components/common/modal/CommonModal.js"],"names":["React","PropTypes","FocusTrap","ReactHtmlParser","Modal","Form","Icon","Header","Button","Table","Segment","CommonModal","props","htmlContent","ignoreDefaultCancel","e","preventDefault","cancelAction","ignoreDefaultConfirm","confirmAction","open","closeOnDimmerClick","size","onClose","position","left","top","transform","color","backgroundColor","padding","title","cancelButtonText","float","displayHtml","children","borderCollapse","visibility","confirmButton","clearButtonText","disabled","marginLeft","confirmButtonText","marginRight","propTypes","buttonText","string","type","isRequired","any","func","scrolling","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FocusTrap from 'focus-trap-react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Modal, Form, Icon, Header, Button, Table, Segment } from 'semantic-ui-react';\n\nconst CommonModal = props => {\n    const { htmlContent } = props;\n    const ignoreDefaultCancel = e => {\n        e.preventDefault();\n        props.cancelAction();\n    };\n    const ignoreDefaultConfirm = e => {\n        e.preventDefault();\n        props.confirmAction();\n    };\n\n    return (\n        !!props.open && (\n            // <FocusTrap>\n            <Modal\n                open={props.open}\n                closeOnDimmerClick={props.closeOnDimmerClick === 'no' ? false : true}\n                size={props.size ? props.size : 'tiny'}\n                onClose={props.cancelAction || props.onClose}\n\n                style={\n                    {\n                        position: 'absolute',\n                        left: '50%',\n                        top: '50%',\n                        transform: 'translate(-50%, -50%)'\n                    }\n                }\n            >\n                <Header as='h2' attached='top' style={{ color: 'white', backgroundColor: '#0E6EB8', padding: \"10px\" }}>\n                    {props.title}\n                    <Icon name='cancel' onClick={ignoreDefaultCancel} title={props.cancelButtonText || 'Cancel'} style={{ float: 'right' }} />\n                </Header>\n                <Modal.Content style={{ padding: \"0px 10px\" }}>\n                    {htmlContent && ReactHtmlParser(props.htmlContent)}\n                    {props.displayHtml ? ReactHtmlParser(props.children) : props.children}\n                    <Form style={{ padding: '24px' }}>\n                        <Form.Field\n                            style={{ borderCollapse: 'collapse', visibility: props.confirmButton ? props.confirmButton : 'visible' }}\n                        >\n                            <Button\n                                title={props.clearButtonText ? props.clearButtonText : 'Clear Changes'}\n                                onClick={ignoreDefaultConfirm}\n                                disabled={props.disabled}\n                                color={'red'}\n                                floated='right'\n                                style={{ marginLeft: '10px' }}\n                            >\n                                {props.clearButtonText ? props.clearButtonText : 'Confirm'}\n                            </Button>\n                            <Button\n                                title={props.confirmButtonText ? props.confirmButtonText : 'Confirm'}\n                                onClick={ignoreDefaultConfirm}\n                                disabled={props.disabled}\n                                color={'blue'}\n                                floated='right'\n                                style={{ marginRight: '10px' }}\n                            >\n                                {props.confirmButtonText ? props.confirmButtonText : 'Confirm'}\n                            </Button>\n                        </Form.Field>\n\n                    </Form>\n                </Modal.Content>\n            </Modal>\n            // </FocusTrap> \n        )\n    )\n};\nCommonModal.propTypes = {\n    buttonText: PropTypes.string,\n    size: PropTypes.string,\n    type: PropTypes.string,\n    closeOnDimmerClick: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    open: PropTypes.any.isRequired,\n    cancelAction: PropTypes.func.isRequired,\n    confirmAction: PropTypes.func.isRequired,\n    scrolling: PropTypes.bool\n};\n\nexport default CommonModal;\n"]},"metadata":{},"sourceType":"module"}