{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2018-2020 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ed25519 = require(\"tweetnacl\");\n\nvar codec_1 = require(\"./codec\");\n\nvar nkeys_1 = require(\"./nkeys\");\n/**\n * KeyPair capable of verifying only\n */\n\n\nvar PublicKey =\n/** @class */\nfunction () {\n  function PublicKey(publicKey) {\n    this.publicKey = publicKey;\n  }\n\n  PublicKey.prototype.getPublicKey = function () {\n    return this.publicKey;\n  };\n\n  PublicKey.prototype.getPrivateKey = function () {\n    throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.PublicKeyOnly);\n  };\n\n  PublicKey.prototype.getSeed = function () {\n    throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.PublicKeyOnly);\n  };\n\n  PublicKey.prototype.sign = function (_) {\n    throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.CannotSign);\n  };\n\n  PublicKey.prototype.verify = function (input, sig) {\n    var buf = codec_1.Codec._decode(this.publicKey);\n\n    return ed25519.sign.detached.verify(input, sig, buf.slice(1));\n  };\n\n  return PublicKey;\n}();\n\nexports.PublicKey = PublicKey;","map":{"version":3,"sources":["../../src/public.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;AAaG;;;;;;AAEH,IAAA,OAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA;;AAEG;;;AACH,IAAA,SAAA;AAAA;AAAA,YAAA;AAGI,WAAA,SAAA,CAAY,SAAZ,EAA6B;AACzB,SAAK,SAAL,GAAiB,SAAjB;AACH;;AAED,EAAA,SAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACI,WAAO,KAAK,SAAZ;AACH,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACI,UAAM,IAAI,OAAA,CAAA,UAAJ,CAAe,OAAA,CAAA,cAAA,CAAe,aAA9B,CAAN;AACH,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACI,UAAM,IAAI,OAAA,CAAA,UAAJ,CAAe,OAAA,CAAA,cAAA,CAAe,aAA9B,CAAN;AACH,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,CAAL,EAAc;AACV,UAAM,IAAI,OAAA,CAAA,UAAJ,CAAe,OAAA,CAAA,cAAA,CAAe,UAA9B,CAAN;AACH,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,KAAP,EAAsB,GAAtB,EAAiC;AAC7B,QAAI,GAAG,GAAG,OAAA,CAAA,KAAA,CAAM,OAAN,CAAc,KAAK,SAAnB,CAAV;;AACA,WAAO,OAAO,CAAC,IAAR,CAAa,QAAb,CAAsB,MAAtB,CAA6B,KAA7B,EAAoC,GAApC,EAAyC,GAAG,CAAC,KAAJ,CAAU,CAAV,CAAzC,CAAP;AACH,GAHD;;AAIJ,SAAA,SAAA;AAAC,CA3BD,EAAA;;AAAa,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2018-2020 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ed25519 = require(\"tweetnacl\");\nvar codec_1 = require(\"./codec\");\nvar nkeys_1 = require(\"./nkeys\");\n/**\n * KeyPair capable of verifying only\n */\nvar PublicKey = /** @class */ (function () {\n    function PublicKey(publicKey) {\n        this.publicKey = publicKey;\n    }\n    PublicKey.prototype.getPublicKey = function () {\n        return this.publicKey;\n    };\n    PublicKey.prototype.getPrivateKey = function () {\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.PublicKeyOnly);\n    };\n    PublicKey.prototype.getSeed = function () {\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.PublicKeyOnly);\n    };\n    PublicKey.prototype.sign = function (_) {\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.CannotSign);\n    };\n    PublicKey.prototype.verify = function (input, sig) {\n        var buf = codec_1.Codec._decode(this.publicKey);\n        return ed25519.sign.detached.verify(input, sig, buf.slice(1));\n    };\n    return PublicKey;\n}());\nexports.PublicKey = PublicKey;\n//# sourceMappingURL=public.js.map"]},"metadata":{},"sourceType":"script"}